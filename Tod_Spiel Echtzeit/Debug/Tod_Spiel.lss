
Tod_Spiel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000075c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006e8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  0000075c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000075c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000078c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000774  00000000  00000000  00000804  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000667  00000000  00000000  00000f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000032b  00000000  00000000  000015df  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b0  00000000  00000000  0000190c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003bc  00000000  00000000  000019bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000153  00000000  00000000  00001d78  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001ecb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_9>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 e6 00 	call	0x1cc	; 0x1cc <main>
  88:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_9>:
typedef   signed long  s32;

u32 t2_soft;	//zählt 0.5 µs ticks

ISR( TIMER2_OVF_vect )
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	8f 93       	push	r24
  9e:	9f 93       	push	r25
  a0:	af 93       	push	r26
  a2:	bf 93       	push	r27
  a4:	cf 93       	push	r28
  a6:	df 93       	push	r29
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
	t2_soft += 256;
  ac:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  b0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  b4:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
  b8:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
  bc:	9f 5f       	subi	r25, 0xFF	; 255
  be:	af 4f       	sbci	r26, 0xFF	; 255
  c0:	bf 4f       	sbci	r27, 0xFF	; 255
  c2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  c6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  ca:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <_edata+0x2>
  ce:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <_edata+0x3>
}
  d2:	00 00       	nop
  d4:	df 91       	pop	r29
  d6:	cf 91       	pop	r28
  d8:	bf 91       	pop	r27
  da:	af 91       	pop	r26
  dc:	9f 91       	pop	r25
  de:	8f 91       	pop	r24
  e0:	0f 90       	pop	r0
  e2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
  e6:	0f 90       	pop	r0
  e8:	1f 90       	pop	r1
  ea:	18 95       	reti

000000ec <t2_init>:

void t2_init( void )
{
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	cd b7       	in	r28, 0x3d	; 61
  f2:	de b7       	in	r29, 0x3e	; 62
	t2_soft = 0;
  f4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
  f8:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
  fc:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
 100:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
	TCCR2B = 1<<CS21;	// mode 0, prescaler 8
 104:	81 eb       	ldi	r24, 0xB1	; 177
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	22 e0       	ldi	r18, 0x02	; 2
 10a:	fc 01       	movw	r30, r24
 10c:	20 83       	st	Z, r18
	TIMSK2 |= 1<<TOIE2;	// enable overflow interrupt
 10e:	80 e7       	ldi	r24, 0x70	; 112
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	20 e7       	ldi	r18, 0x70	; 112
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	f9 01       	movw	r30, r18
 118:	20 81       	ld	r18, Z
 11a:	21 60       	ori	r18, 0x01	; 1
 11c:	fc 01       	movw	r30, r24
 11e:	20 83       	st	Z, r18
	//TCCR2A |= (1<<WGM01); //CTC Modus
	//OCR2A = 249; //Comparematch bei 249 -> Event je ms
	//TIMSK2 |= (1<<OCIE2A); //Interrupt des OCR aktiv

}
 120:	00 00       	nop
 122:	df 91       	pop	r29
 124:	cf 91       	pop	r28
 126:	08 95       	ret

00000128 <get_ticks>:


u32 get_ticks( void )			  // read T2 as 32 bit timer
{
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	00 d0       	rcall	.+0      	; 0x12e <get_ticks+0x6>
 12e:	00 d0       	rcall	.+0      	; 0x130 <get_ticks+0x8>
 130:	1f 92       	push	r1
 132:	cd b7       	in	r28, 0x3d	; 61
 134:	de b7       	in	r29, 0x3e	; 62
	u32 val;
	u8 tifr;

	cli();	//clear interrupt
 136:	f8 94       	cli
	val = t2_soft + TCNT2;
 138:	82 eb       	ldi	r24, 0xB2	; 178
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	fc 01       	movw	r30, r24
 13e:	80 81       	ld	r24, Z
 140:	28 2f       	mov	r18, r24
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	40 e0       	ldi	r20, 0x00	; 0
 146:	50 e0       	ldi	r21, 0x00	; 0
 148:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 14c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 150:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
 154:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
 158:	82 0f       	add	r24, r18
 15a:	93 1f       	adc	r25, r19
 15c:	a4 1f       	adc	r26, r20
 15e:	b5 1f       	adc	r27, r21
 160:	89 83       	std	Y+1, r24	; 0x01
 162:	9a 83       	std	Y+2, r25	; 0x02
 164:	ab 83       	std	Y+3, r26	; 0x03
 166:	bc 83       	std	Y+4, r27	; 0x04
	tifr = TIFR2;				  // read interrupt flags
 168:	87 e3       	ldi	r24, 0x37	; 55
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	fc 01       	movw	r30, r24
 16e:	80 81       	ld	r24, Z
 170:	8d 83       	std	Y+5, r24	; 0x05
	sei();
 172:	78 94       	sei
	if( (tifr & 1<<TOV2) && !(val & 0x80) ) // overflow prior reading TCNT2 ?
 174:	8d 81       	ldd	r24, Y+5	; 0x05
 176:	88 2f       	mov	r24, r24
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	81 70       	andi	r24, 0x01	; 1
 17c:	99 27       	eor	r25, r25
 17e:	89 2b       	or	r24, r25
 180:	b9 f0       	breq	.+46     	; 0x1b0 <get_ticks+0x88>
 182:	89 81       	ldd	r24, Y+1	; 0x01
 184:	9a 81       	ldd	r25, Y+2	; 0x02
 186:	ab 81       	ldd	r26, Y+3	; 0x03
 188:	bc 81       	ldd	r27, Y+4	; 0x04
 18a:	80 78       	andi	r24, 0x80	; 128
 18c:	99 27       	eor	r25, r25
 18e:	aa 27       	eor	r26, r26
 190:	bb 27       	eor	r27, r27
 192:	89 2b       	or	r24, r25
 194:	8a 2b       	or	r24, r26
 196:	8b 2b       	or	r24, r27
 198:	59 f4       	brne	.+22     	; 0x1b0 <get_ticks+0x88>
	val += 256;				  // then add overflow
 19a:	89 81       	ldd	r24, Y+1	; 0x01
 19c:	9a 81       	ldd	r25, Y+2	; 0x02
 19e:	ab 81       	ldd	r26, Y+3	; 0x03
 1a0:	bc 81       	ldd	r27, Y+4	; 0x04
 1a2:	9f 5f       	subi	r25, 0xFF	; 255
 1a4:	af 4f       	sbci	r26, 0xFF	; 255
 1a6:	bf 4f       	sbci	r27, 0xFF	; 255
 1a8:	89 83       	std	Y+1, r24	; 0x01
 1aa:	9a 83       	std	Y+2, r25	; 0x02
 1ac:	ab 83       	std	Y+3, r26	; 0x03
 1ae:	bc 83       	std	Y+4, r27	; 0x04

	return val;
 1b0:	89 81       	ldd	r24, Y+1	; 0x01
 1b2:	9a 81       	ldd	r25, Y+2	; 0x02
 1b4:	ab 81       	ldd	r26, Y+3	; 0x03
 1b6:	bc 81       	ldd	r27, Y+4	; 0x04
}
 1b8:	bc 01       	movw	r22, r24
 1ba:	cd 01       	movw	r24, r26
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	df 91       	pop	r29
 1c8:	cf 91       	pop	r28
 1ca:	08 95       	ret

000001cc <main>:




int main(void)
{
 1cc:	cf 93       	push	r28
 1ce:	df 93       	push	r29
 1d0:	cd b7       	in	r28, 0x3d	; 61
 1d2:	de b7       	in	r29, 0x3e	; 62
 1d4:	2f 97       	sbiw	r28, 0x0f	; 15
 1d6:	0f b6       	in	r0, 0x3f	; 63
 1d8:	f8 94       	cli
 1da:	de bf       	out	0x3e, r29	; 62
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	cd bf       	out	0x3d, r28	; 61
	uint8_t zustand = 0, taster = 0, taster_alt = 0;
 1e0:	19 82       	std	Y+1, r1	; 0x01
 1e2:	1a 82       	std	Y+2, r1	; 0x02
 1e4:	1b 82       	std	Y+3, r1	; 0x03
	double t = 0.0, t0 = 0.0;
 1e6:	18 86       	std	Y+8, r1	; 0x08
 1e8:	19 86       	std	Y+9, r1	; 0x09
 1ea:	1a 86       	std	Y+10, r1	; 0x0a
 1ec:	1b 86       	std	Y+11, r1	; 0x0b
 1ee:	1c 82       	std	Y+4, r1	; 0x04
 1f0:	1d 82       	std	Y+5, r1	; 0x05
 1f2:	1e 82       	std	Y+6, r1	; 0x06
 1f4:	1f 82       	std	Y+7, r1	; 0x07

	u32 timerticks;		

	t2_init();
 1f6:	0e 94 76 00 	call	0xec	; 0xec <t2_init>
	sei();
 1fa:	78 94       	sei


	//Hardware vorbereiten
	DDRB = 0 | (1<<LED_RT) | (1<<LED_GN);		//1 für Ausgang
 1fc:	84 e2       	ldi	r24, 0x24	; 36
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	23 e0       	ldi	r18, 0x03	; 3
 202:	fc 01       	movw	r30, r24
 204:	20 83       	st	Z, r18
	PORTB = (1<<TASTER); //PULLUP
 206:	85 e2       	ldi	r24, 0x25	; 37
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	24 e0       	ldi	r18, 0x04	; 4
 20c:	fc 01       	movw	r30, r24
 20e:	20 83       	st	Z, r18

	zustand = Z_STOPP;	//1 Stopp, 2 Run
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	89 83       	std	Y+1, r24	; 0x01
	taster_alt =0;	//1 gedrückt
 214:	1b 82       	std	Y+3, r1	; 0x03

	//Schleife
	while (1)
	{
		
		timerticks = get_ticks();
 216:	0e 94 94 00 	call	0x128	; 0x128 <get_ticks>
 21a:	dc 01       	movw	r26, r24
 21c:	cb 01       	movw	r24, r22
 21e:	8c 87       	std	Y+12, r24	; 0x0c
 220:	9d 87       	std	Y+13, r25	; 0x0d
 222:	ae 87       	std	Y+14, r26	; 0x0e
 224:	bf 87       	std	Y+15, r27	; 0x0f
		if ((PINB & (1<<TASTER)) == 0)
 226:	83 e2       	ldi	r24, 0x23	; 35
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	fc 01       	movw	r30, r24
 22c:	80 81       	ld	r24, Z
 22e:	88 2f       	mov	r24, r24
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	84 70       	andi	r24, 0x04	; 4
 234:	99 27       	eor	r25, r25
 236:	89 2b       	or	r24, r25
 238:	19 f4       	brne	.+6      	; 0x240 <main+0x74>
			taster = 1;
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	8a 83       	std	Y+2, r24	; 0x02
 23e:	01 c0       	rjmp	.+2      	; 0x242 <main+0x76>
		else
			{taster = 0;}
 240:	1a 82       	std	Y+2, r1	; 0x02
		t = (timerticks /2000000.);	//2 000 000
 242:	6c 85       	ldd	r22, Y+12	; 0x0c
 244:	7d 85       	ldd	r23, Y+13	; 0x0d
 246:	8e 85       	ldd	r24, Y+14	; 0x0e
 248:	9f 85       	ldd	r25, Y+15	; 0x0f
 24a:	0e 94 bb 02 	call	0x576	; 0x576 <__floatunsisf>
 24e:	dc 01       	movw	r26, r24
 250:	cb 01       	movw	r24, r22
 252:	20 e0       	ldi	r18, 0x00	; 0
 254:	34 e2       	ldi	r19, 0x24	; 36
 256:	44 ef       	ldi	r20, 0xF4	; 244
 258:	59 e4       	ldi	r21, 0x49	; 73
 25a:	bc 01       	movw	r22, r24
 25c:	cd 01       	movw	r24, r26
 25e:	0e 94 49 02 	call	0x492	; 0x492 <__divsf3>
 262:	dc 01       	movw	r26, r24
 264:	cb 01       	movw	r24, r22
 266:	88 87       	std	Y+8, r24	; 0x08
 268:	99 87       	std	Y+9, r25	; 0x09
 26a:	aa 87       	std	Y+10, r26	; 0x0a
 26c:	bb 87       	std	Y+11, r27	; 0x0b
		//t = timerticks * 0.0000005;
		if (t >= 1.0)
 26e:	20 e0       	ldi	r18, 0x00	; 0
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	40 e8       	ldi	r20, 0x80	; 128
 274:	5f e3       	ldi	r21, 0x3F	; 63
 276:	68 85       	ldd	r22, Y+8	; 0x08
 278:	79 85       	ldd	r23, Y+9	; 0x09
 27a:	8a 85       	ldd	r24, Y+10	; 0x0a
 27c:	9b 85       	ldd	r25, Y+11	; 0x0b
 27e:	0e 94 6d 03 	call	0x6da	; 0x6da <__gesf2>
 282:	88 23       	and	r24, r24
 284:	2c f0       	brlt	.+10     	; 0x290 <main+0xc4>
			PORTD = 0xFF;
 286:	8b e2       	ldi	r24, 0x2B	; 43
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	2f ef       	ldi	r18, 0xFF	; 255
 28c:	fc 01       	movw	r30, r24
 28e:	20 83       	st	Z, r18
		//t ++;
		/*if (zustand == Z_RUN && t < 0.8)
			PORTB |= (1<<LED_RT);
		else 
			PORTB &= ~(1<<LED_RT);*/
		if (taster > taster_alt)
 290:	9a 81       	ldd	r25, Y+2	; 0x02
 292:	8b 81       	ldd	r24, Y+3	; 0x03
 294:	89 17       	cp	r24, r25
 296:	08 f0       	brcs	.+2      	; 0x29a <main+0xce>
 298:	87 c0       	rjmp	.+270    	; 0x3a8 <main+0x1dc>
		{
			switch (zustand)	//Wenn Zustand != Z_STOPP dann ist Z_RUN
 29a:	89 81       	ldd	r24, Y+1	; 0x01
 29c:	88 2f       	mov	r24, r24
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	81 30       	cpi	r24, 0x01	; 1
 2a2:	91 05       	cpc	r25, r1
 2a4:	19 f0       	breq	.+6      	; 0x2ac <main+0xe0>
 2a6:	02 97       	sbiw	r24, 0x02	; 2
 2a8:	f1 f0       	breq	.+60     	; 0x2e6 <main+0x11a>
 2aa:	7e c0       	rjmp	.+252    	; 0x3a8 <main+0x1dc>
			{
				case Z_STOPP:
					t0 = t;
 2ac:	88 85       	ldd	r24, Y+8	; 0x08
 2ae:	99 85       	ldd	r25, Y+9	; 0x09
 2b0:	aa 85       	ldd	r26, Y+10	; 0x0a
 2b2:	bb 85       	ldd	r27, Y+11	; 0x0b
 2b4:	8c 83       	std	Y+4, r24	; 0x04
 2b6:	9d 83       	std	Y+5, r25	; 0x05
 2b8:	ae 83       	std	Y+6, r26	; 0x06
 2ba:	bf 83       	std	Y+7, r27	; 0x07
					PORTB &= ~(1<<LED_GN);
 2bc:	85 e2       	ldi	r24, 0x25	; 37
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	25 e2       	ldi	r18, 0x25	; 37
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	f9 01       	movw	r30, r18
 2c6:	20 81       	ld	r18, Z
 2c8:	2e 7f       	andi	r18, 0xFE	; 254
 2ca:	fc 01       	movw	r30, r24
 2cc:	20 83       	st	Z, r18
					PORTB &= ~(1<<LED_RT);
 2ce:	85 e2       	ldi	r24, 0x25	; 37
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	25 e2       	ldi	r18, 0x25	; 37
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	f9 01       	movw	r30, r18
 2d8:	20 81       	ld	r18, Z
 2da:	2d 7f       	andi	r18, 0xFD	; 253
 2dc:	fc 01       	movw	r30, r24
 2de:	20 83       	st	Z, r18
					zustand = Z_RUN;
 2e0:	82 e0       	ldi	r24, 0x02	; 2
 2e2:	89 83       	std	Y+1, r24	; 0x01
				break;
 2e4:	61 c0       	rjmp	.+194    	; 0x3a8 <main+0x1dc>
				case Z_RUN:
					if (t - t0 > 2.2 || t-t0 < 1.8)
 2e6:	2c 81       	ldd	r18, Y+4	; 0x04
 2e8:	3d 81       	ldd	r19, Y+5	; 0x05
 2ea:	4e 81       	ldd	r20, Y+6	; 0x06
 2ec:	5f 81       	ldd	r21, Y+7	; 0x07
 2ee:	68 85       	ldd	r22, Y+8	; 0x08
 2f0:	79 85       	ldd	r23, Y+9	; 0x09
 2f2:	8a 85       	ldd	r24, Y+10	; 0x0a
 2f4:	9b 85       	ldd	r25, Y+11	; 0x0b
 2f6:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__subsf3>
 2fa:	dc 01       	movw	r26, r24
 2fc:	cb 01       	movw	r24, r22
 2fe:	2d ec       	ldi	r18, 0xCD	; 205
 300:	3c ec       	ldi	r19, 0xCC	; 204
 302:	4c e0       	ldi	r20, 0x0C	; 12
 304:	50 e4       	ldi	r21, 0x40	; 64
 306:	bc 01       	movw	r22, r24
 308:	cd 01       	movw	r24, r26
 30a:	0e 94 6d 03 	call	0x6da	; 0x6da <__gesf2>
 30e:	18 16       	cp	r1, r24
 310:	b4 f0       	brlt	.+44     	; 0x33e <main+0x172>
 312:	2c 81       	ldd	r18, Y+4	; 0x04
 314:	3d 81       	ldd	r19, Y+5	; 0x05
 316:	4e 81       	ldd	r20, Y+6	; 0x06
 318:	5f 81       	ldd	r21, Y+7	; 0x07
 31a:	68 85       	ldd	r22, Y+8	; 0x08
 31c:	79 85       	ldd	r23, Y+9	; 0x09
 31e:	8a 85       	ldd	r24, Y+10	; 0x0a
 320:	9b 85       	ldd	r25, Y+11	; 0x0b
 322:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__subsf3>
 326:	dc 01       	movw	r26, r24
 328:	cb 01       	movw	r24, r22
 32a:	26 e6       	ldi	r18, 0x66	; 102
 32c:	36 e6       	ldi	r19, 0x66	; 102
 32e:	46 ee       	ldi	r20, 0xE6	; 230
 330:	5f e3       	ldi	r21, 0x3F	; 63
 332:	bc 01       	movw	r22, r24
 334:	cd 01       	movw	r24, r26
 336:	0e 94 44 02 	call	0x488	; 0x488 <__cmpsf2>
 33a:	88 23       	and	r24, r24
 33c:	4c f5       	brge	.+82     	; 0x390 <main+0x1c4>
					{// schlecht 
						PORTB |= (1<<LED_RT);
 33e:	85 e2       	ldi	r24, 0x25	; 37
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	25 e2       	ldi	r18, 0x25	; 37
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	f9 01       	movw	r30, r18
 348:	20 81       	ld	r18, Z
 34a:	22 60       	ori	r18, 0x02	; 2
 34c:	fc 01       	movw	r30, r24
 34e:	20 83       	st	Z, r18
						if (t-t0 < 1.8)
 350:	2c 81       	ldd	r18, Y+4	; 0x04
 352:	3d 81       	ldd	r19, Y+5	; 0x05
 354:	4e 81       	ldd	r20, Y+6	; 0x06
 356:	5f 81       	ldd	r21, Y+7	; 0x07
 358:	68 85       	ldd	r22, Y+8	; 0x08
 35a:	79 85       	ldd	r23, Y+9	; 0x09
 35c:	8a 85       	ldd	r24, Y+10	; 0x0a
 35e:	9b 85       	ldd	r25, Y+11	; 0x0b
 360:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__subsf3>
 364:	dc 01       	movw	r26, r24
 366:	cb 01       	movw	r24, r22
 368:	26 e6       	ldi	r18, 0x66	; 102
 36a:	36 e6       	ldi	r19, 0x66	; 102
 36c:	46 ee       	ldi	r20, 0xE6	; 230
 36e:	5f e3       	ldi	r21, 0x3F	; 63
 370:	bc 01       	movw	r22, r24
 372:	cd 01       	movw	r24, r26
 374:	0e 94 44 02 	call	0x488	; 0x488 <__cmpsf2>
 378:	88 23       	and	r24, r24
 37a:	9c f4       	brge	.+38     	; 0x3a2 <main+0x1d6>
						PORTB |= (1<<LED_GN);
 37c:	85 e2       	ldi	r24, 0x25	; 37
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	25 e2       	ldi	r18, 0x25	; 37
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	f9 01       	movw	r30, r18
 386:	20 81       	ld	r18, Z
 388:	21 60       	ori	r18, 0x01	; 1
 38a:	fc 01       	movw	r30, r24
 38c:	20 83       	st	Z, r18
				break;
				case Z_RUN:
					if (t - t0 > 2.2 || t-t0 < 1.8)
					{// schlecht 
						PORTB |= (1<<LED_RT);
						if (t-t0 < 1.8)
 38e:	09 c0       	rjmp	.+18     	; 0x3a2 <main+0x1d6>
						PORTB |= (1<<LED_GN);
					}
					else
						PORTB |= (1<<LED_GN);
 390:	85 e2       	ldi	r24, 0x25	; 37
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	25 e2       	ldi	r18, 0x25	; 37
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	f9 01       	movw	r30, r18
 39a:	20 81       	ld	r18, Z
 39c:	21 60       	ori	r18, 0x01	; 1
 39e:	fc 01       	movw	r30, r24
 3a0:	20 83       	st	Z, r18
					zustand = Z_STOPP;
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	89 83       	std	Y+1, r24	; 0x01
				break;
 3a6:	00 00       	nop
				default:;

			}
		}
		taster_alt = taster;
 3a8:	8a 81       	ldd	r24, Y+2	; 0x02
 3aa:	8b 83       	std	Y+3, r24	; 0x03
	}
 3ac:	34 cf       	rjmp	.-408    	; 0x216 <main+0x4a>

000003ae <__subsf3>:
 3ae:	50 58       	subi	r21, 0x80	; 128

000003b0 <__addsf3>:
 3b0:	bb 27       	eor	r27, r27
 3b2:	aa 27       	eor	r26, r26
 3b4:	0e 94 ef 01 	call	0x3de	; 0x3de <__addsf3x>
 3b8:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_round>
 3bc:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_pscA>
 3c0:	38 f0       	brcs	.+14     	; 0x3d0 <__addsf3+0x20>
 3c2:	0e 94 2c 03 	call	0x658	; 0x658 <__fp_pscB>
 3c6:	20 f0       	brcs	.+8      	; 0x3d0 <__addsf3+0x20>
 3c8:	39 f4       	brne	.+14     	; 0x3d8 <__addsf3+0x28>
 3ca:	9f 3f       	cpi	r25, 0xFF	; 255
 3cc:	19 f4       	brne	.+6      	; 0x3d4 <__addsf3+0x24>
 3ce:	26 f4       	brtc	.+8      	; 0x3d8 <__addsf3+0x28>
 3d0:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_nan>
 3d4:	0e f4       	brtc	.+2      	; 0x3d8 <__addsf3+0x28>
 3d6:	e0 95       	com	r30
 3d8:	e7 fb       	bst	r30, 7
 3da:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_inf>

000003de <__addsf3x>:
 3de:	e9 2f       	mov	r30, r25
 3e0:	0e 94 44 03 	call	0x688	; 0x688 <__fp_split3>
 3e4:	58 f3       	brcs	.-42     	; 0x3bc <__addsf3+0xc>
 3e6:	ba 17       	cp	r27, r26
 3e8:	62 07       	cpc	r22, r18
 3ea:	73 07       	cpc	r23, r19
 3ec:	84 07       	cpc	r24, r20
 3ee:	95 07       	cpc	r25, r21
 3f0:	20 f0       	brcs	.+8      	; 0x3fa <__addsf3x+0x1c>
 3f2:	79 f4       	brne	.+30     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3f4:	a6 f5       	brtc	.+104    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 3f6:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <__fp_zero>
 3fa:	0e f4       	brtc	.+2      	; 0x3fe <__addsf3x+0x20>
 3fc:	e0 95       	com	r30
 3fe:	0b 2e       	mov	r0, r27
 400:	ba 2f       	mov	r27, r26
 402:	a0 2d       	mov	r26, r0
 404:	0b 01       	movw	r0, r22
 406:	b9 01       	movw	r22, r18
 408:	90 01       	movw	r18, r0
 40a:	0c 01       	movw	r0, r24
 40c:	ca 01       	movw	r24, r20
 40e:	a0 01       	movw	r20, r0
 410:	11 24       	eor	r1, r1
 412:	ff 27       	eor	r31, r31
 414:	59 1b       	sub	r21, r25
 416:	99 f0       	breq	.+38     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 418:	59 3f       	cpi	r21, 0xF9	; 249
 41a:	50 f4       	brcc	.+20     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 41c:	50 3e       	cpi	r21, 0xE0	; 224
 41e:	68 f1       	brcs	.+90     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 420:	1a 16       	cp	r1, r26
 422:	f0 40       	sbci	r31, 0x00	; 0
 424:	a2 2f       	mov	r26, r18
 426:	23 2f       	mov	r18, r19
 428:	34 2f       	mov	r19, r20
 42a:	44 27       	eor	r20, r20
 42c:	58 5f       	subi	r21, 0xF8	; 248
 42e:	f3 cf       	rjmp	.-26     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 430:	46 95       	lsr	r20
 432:	37 95       	ror	r19
 434:	27 95       	ror	r18
 436:	a7 95       	ror	r26
 438:	f0 40       	sbci	r31, 0x00	; 0
 43a:	53 95       	inc	r21
 43c:	c9 f7       	brne	.-14     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 43e:	7e f4       	brtc	.+30     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 440:	1f 16       	cp	r1, r31
 442:	ba 0b       	sbc	r27, r26
 444:	62 0b       	sbc	r22, r18
 446:	73 0b       	sbc	r23, r19
 448:	84 0b       	sbc	r24, r20
 44a:	ba f0       	brmi	.+46     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 44c:	91 50       	subi	r25, 0x01	; 1
 44e:	a1 f0       	breq	.+40     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 450:	ff 0f       	add	r31, r31
 452:	bb 1f       	adc	r27, r27
 454:	66 1f       	adc	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	c2 f7       	brpl	.-16     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 45c:	0e c0       	rjmp	.+28     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 45e:	ba 0f       	add	r27, r26
 460:	62 1f       	adc	r22, r18
 462:	73 1f       	adc	r23, r19
 464:	84 1f       	adc	r24, r20
 466:	48 f4       	brcc	.+18     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 468:	87 95       	ror	r24
 46a:	77 95       	ror	r23
 46c:	67 95       	ror	r22
 46e:	b7 95       	ror	r27
 470:	f7 95       	ror	r31
 472:	9e 3f       	cpi	r25, 0xFE	; 254
 474:	08 f0       	brcs	.+2      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 476:	b0 cf       	rjmp	.-160    	; 0x3d8 <__addsf3+0x28>
 478:	93 95       	inc	r25
 47a:	88 0f       	add	r24, r24
 47c:	08 f0       	brcs	.+2      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 47e:	99 27       	eor	r25, r25
 480:	ee 0f       	add	r30, r30
 482:	97 95       	ror	r25
 484:	87 95       	ror	r24
 486:	08 95       	ret

00000488 <__cmpsf2>:
 488:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__fp_cmp>
 48c:	08 f4       	brcc	.+2      	; 0x490 <__cmpsf2+0x8>
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	08 95       	ret

00000492 <__divsf3>:
 492:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__divsf3x>
 496:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_round>
 49a:	0e 94 2c 03 	call	0x658	; 0x658 <__fp_pscB>
 49e:	58 f0       	brcs	.+22     	; 0x4b6 <__divsf3+0x24>
 4a0:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_pscA>
 4a4:	40 f0       	brcs	.+16     	; 0x4b6 <__divsf3+0x24>
 4a6:	29 f4       	brne	.+10     	; 0x4b2 <__divsf3+0x20>
 4a8:	5f 3f       	cpi	r21, 0xFF	; 255
 4aa:	29 f0       	breq	.+10     	; 0x4b6 <__divsf3+0x24>
 4ac:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_inf>
 4b0:	51 11       	cpse	r21, r1
 4b2:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__fp_szero>
 4b6:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_nan>

000004ba <__divsf3x>:
 4ba:	0e 94 44 03 	call	0x688	; 0x688 <__fp_split3>
 4be:	68 f3       	brcs	.-38     	; 0x49a <__divsf3+0x8>

000004c0 <__divsf3_pse>:
 4c0:	99 23       	and	r25, r25
 4c2:	b1 f3       	breq	.-20     	; 0x4b0 <__divsf3+0x1e>
 4c4:	55 23       	and	r21, r21
 4c6:	91 f3       	breq	.-28     	; 0x4ac <__divsf3+0x1a>
 4c8:	95 1b       	sub	r25, r21
 4ca:	55 0b       	sbc	r21, r21
 4cc:	bb 27       	eor	r27, r27
 4ce:	aa 27       	eor	r26, r26
 4d0:	62 17       	cp	r22, r18
 4d2:	73 07       	cpc	r23, r19
 4d4:	84 07       	cpc	r24, r20
 4d6:	38 f0       	brcs	.+14     	; 0x4e6 <__divsf3_pse+0x26>
 4d8:	9f 5f       	subi	r25, 0xFF	; 255
 4da:	5f 4f       	sbci	r21, 0xFF	; 255
 4dc:	22 0f       	add	r18, r18
 4de:	33 1f       	adc	r19, r19
 4e0:	44 1f       	adc	r20, r20
 4e2:	aa 1f       	adc	r26, r26
 4e4:	a9 f3       	breq	.-22     	; 0x4d0 <__divsf3_pse+0x10>
 4e6:	35 d0       	rcall	.+106    	; 0x552 <__divsf3_pse+0x92>
 4e8:	0e 2e       	mov	r0, r30
 4ea:	3a f0       	brmi	.+14     	; 0x4fa <__divsf3_pse+0x3a>
 4ec:	e0 e8       	ldi	r30, 0x80	; 128
 4ee:	32 d0       	rcall	.+100    	; 0x554 <__divsf3_pse+0x94>
 4f0:	91 50       	subi	r25, 0x01	; 1
 4f2:	50 40       	sbci	r21, 0x00	; 0
 4f4:	e6 95       	lsr	r30
 4f6:	00 1c       	adc	r0, r0
 4f8:	ca f7       	brpl	.-14     	; 0x4ec <__divsf3_pse+0x2c>
 4fa:	2b d0       	rcall	.+86     	; 0x552 <__divsf3_pse+0x92>
 4fc:	fe 2f       	mov	r31, r30
 4fe:	29 d0       	rcall	.+82     	; 0x552 <__divsf3_pse+0x92>
 500:	66 0f       	add	r22, r22
 502:	77 1f       	adc	r23, r23
 504:	88 1f       	adc	r24, r24
 506:	bb 1f       	adc	r27, r27
 508:	26 17       	cp	r18, r22
 50a:	37 07       	cpc	r19, r23
 50c:	48 07       	cpc	r20, r24
 50e:	ab 07       	cpc	r26, r27
 510:	b0 e8       	ldi	r27, 0x80	; 128
 512:	09 f0       	breq	.+2      	; 0x516 <__divsf3_pse+0x56>
 514:	bb 0b       	sbc	r27, r27
 516:	80 2d       	mov	r24, r0
 518:	bf 01       	movw	r22, r30
 51a:	ff 27       	eor	r31, r31
 51c:	93 58       	subi	r25, 0x83	; 131
 51e:	5f 4f       	sbci	r21, 0xFF	; 255
 520:	3a f0       	brmi	.+14     	; 0x530 <__divsf3_pse+0x70>
 522:	9e 3f       	cpi	r25, 0xFE	; 254
 524:	51 05       	cpc	r21, r1
 526:	78 f0       	brcs	.+30     	; 0x546 <__divsf3_pse+0x86>
 528:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_inf>
 52c:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__fp_szero>
 530:	5f 3f       	cpi	r21, 0xFF	; 255
 532:	e4 f3       	brlt	.-8      	; 0x52c <__divsf3_pse+0x6c>
 534:	98 3e       	cpi	r25, 0xE8	; 232
 536:	d4 f3       	brlt	.-12     	; 0x52c <__divsf3_pse+0x6c>
 538:	86 95       	lsr	r24
 53a:	77 95       	ror	r23
 53c:	67 95       	ror	r22
 53e:	b7 95       	ror	r27
 540:	f7 95       	ror	r31
 542:	9f 5f       	subi	r25, 0xFF	; 255
 544:	c9 f7       	brne	.-14     	; 0x538 <__divsf3_pse+0x78>
 546:	88 0f       	add	r24, r24
 548:	91 1d       	adc	r25, r1
 54a:	96 95       	lsr	r25
 54c:	87 95       	ror	r24
 54e:	97 f9       	bld	r25, 7
 550:	08 95       	ret
 552:	e1 e0       	ldi	r30, 0x01	; 1
 554:	66 0f       	add	r22, r22
 556:	77 1f       	adc	r23, r23
 558:	88 1f       	adc	r24, r24
 55a:	bb 1f       	adc	r27, r27
 55c:	62 17       	cp	r22, r18
 55e:	73 07       	cpc	r23, r19
 560:	84 07       	cpc	r24, r20
 562:	ba 07       	cpc	r27, r26
 564:	20 f0       	brcs	.+8      	; 0x56e <__divsf3_pse+0xae>
 566:	62 1b       	sub	r22, r18
 568:	73 0b       	sbc	r23, r19
 56a:	84 0b       	sbc	r24, r20
 56c:	ba 0b       	sbc	r27, r26
 56e:	ee 1f       	adc	r30, r30
 570:	88 f7       	brcc	.-30     	; 0x554 <__divsf3_pse+0x94>
 572:	e0 95       	com	r30
 574:	08 95       	ret

00000576 <__floatunsisf>:
 576:	e8 94       	clt
 578:	09 c0       	rjmp	.+18     	; 0x58c <__floatsisf+0x12>

0000057a <__floatsisf>:
 57a:	97 fb       	bst	r25, 7
 57c:	3e f4       	brtc	.+14     	; 0x58c <__floatsisf+0x12>
 57e:	90 95       	com	r25
 580:	80 95       	com	r24
 582:	70 95       	com	r23
 584:	61 95       	neg	r22
 586:	7f 4f       	sbci	r23, 0xFF	; 255
 588:	8f 4f       	sbci	r24, 0xFF	; 255
 58a:	9f 4f       	sbci	r25, 0xFF	; 255
 58c:	99 23       	and	r25, r25
 58e:	a9 f0       	breq	.+42     	; 0x5ba <__floatsisf+0x40>
 590:	f9 2f       	mov	r31, r25
 592:	96 e9       	ldi	r25, 0x96	; 150
 594:	bb 27       	eor	r27, r27
 596:	93 95       	inc	r25
 598:	f6 95       	lsr	r31
 59a:	87 95       	ror	r24
 59c:	77 95       	ror	r23
 59e:	67 95       	ror	r22
 5a0:	b7 95       	ror	r27
 5a2:	f1 11       	cpse	r31, r1
 5a4:	f8 cf       	rjmp	.-16     	; 0x596 <__floatsisf+0x1c>
 5a6:	fa f4       	brpl	.+62     	; 0x5e6 <__floatsisf+0x6c>
 5a8:	bb 0f       	add	r27, r27
 5aa:	11 f4       	brne	.+4      	; 0x5b0 <__floatsisf+0x36>
 5ac:	60 ff       	sbrs	r22, 0
 5ae:	1b c0       	rjmp	.+54     	; 0x5e6 <__floatsisf+0x6c>
 5b0:	6f 5f       	subi	r22, 0xFF	; 255
 5b2:	7f 4f       	sbci	r23, 0xFF	; 255
 5b4:	8f 4f       	sbci	r24, 0xFF	; 255
 5b6:	9f 4f       	sbci	r25, 0xFF	; 255
 5b8:	16 c0       	rjmp	.+44     	; 0x5e6 <__floatsisf+0x6c>
 5ba:	88 23       	and	r24, r24
 5bc:	11 f0       	breq	.+4      	; 0x5c2 <__floatsisf+0x48>
 5be:	96 e9       	ldi	r25, 0x96	; 150
 5c0:	11 c0       	rjmp	.+34     	; 0x5e4 <__floatsisf+0x6a>
 5c2:	77 23       	and	r23, r23
 5c4:	21 f0       	breq	.+8      	; 0x5ce <__floatsisf+0x54>
 5c6:	9e e8       	ldi	r25, 0x8E	; 142
 5c8:	87 2f       	mov	r24, r23
 5ca:	76 2f       	mov	r23, r22
 5cc:	05 c0       	rjmp	.+10     	; 0x5d8 <__floatsisf+0x5e>
 5ce:	66 23       	and	r22, r22
 5d0:	71 f0       	breq	.+28     	; 0x5ee <__floatsisf+0x74>
 5d2:	96 e8       	ldi	r25, 0x86	; 134
 5d4:	86 2f       	mov	r24, r22
 5d6:	70 e0       	ldi	r23, 0x00	; 0
 5d8:	60 e0       	ldi	r22, 0x00	; 0
 5da:	2a f0       	brmi	.+10     	; 0x5e6 <__floatsisf+0x6c>
 5dc:	9a 95       	dec	r25
 5de:	66 0f       	add	r22, r22
 5e0:	77 1f       	adc	r23, r23
 5e2:	88 1f       	adc	r24, r24
 5e4:	da f7       	brpl	.-10     	; 0x5dc <__floatsisf+0x62>
 5e6:	88 0f       	add	r24, r24
 5e8:	96 95       	lsr	r25
 5ea:	87 95       	ror	r24
 5ec:	97 f9       	bld	r25, 7
 5ee:	08 95       	ret

000005f0 <__fp_cmp>:
 5f0:	99 0f       	add	r25, r25
 5f2:	00 08       	sbc	r0, r0
 5f4:	55 0f       	add	r21, r21
 5f6:	aa 0b       	sbc	r26, r26
 5f8:	e0 e8       	ldi	r30, 0x80	; 128
 5fa:	fe ef       	ldi	r31, 0xFE	; 254
 5fc:	16 16       	cp	r1, r22
 5fe:	17 06       	cpc	r1, r23
 600:	e8 07       	cpc	r30, r24
 602:	f9 07       	cpc	r31, r25
 604:	c0 f0       	brcs	.+48     	; 0x636 <__fp_cmp+0x46>
 606:	12 16       	cp	r1, r18
 608:	13 06       	cpc	r1, r19
 60a:	e4 07       	cpc	r30, r20
 60c:	f5 07       	cpc	r31, r21
 60e:	98 f0       	brcs	.+38     	; 0x636 <__fp_cmp+0x46>
 610:	62 1b       	sub	r22, r18
 612:	73 0b       	sbc	r23, r19
 614:	84 0b       	sbc	r24, r20
 616:	95 0b       	sbc	r25, r21
 618:	39 f4       	brne	.+14     	; 0x628 <__fp_cmp+0x38>
 61a:	0a 26       	eor	r0, r26
 61c:	61 f0       	breq	.+24     	; 0x636 <__fp_cmp+0x46>
 61e:	23 2b       	or	r18, r19
 620:	24 2b       	or	r18, r20
 622:	25 2b       	or	r18, r21
 624:	21 f4       	brne	.+8      	; 0x62e <__fp_cmp+0x3e>
 626:	08 95       	ret
 628:	0a 26       	eor	r0, r26
 62a:	09 f4       	brne	.+2      	; 0x62e <__fp_cmp+0x3e>
 62c:	a1 40       	sbci	r26, 0x01	; 1
 62e:	a6 95       	lsr	r26
 630:	8f ef       	ldi	r24, 0xFF	; 255
 632:	81 1d       	adc	r24, r1
 634:	81 1d       	adc	r24, r1
 636:	08 95       	ret

00000638 <__fp_inf>:
 638:	97 f9       	bld	r25, 7
 63a:	9f 67       	ori	r25, 0x7F	; 127
 63c:	80 e8       	ldi	r24, 0x80	; 128
 63e:	70 e0       	ldi	r23, 0x00	; 0
 640:	60 e0       	ldi	r22, 0x00	; 0
 642:	08 95       	ret

00000644 <__fp_nan>:
 644:	9f ef       	ldi	r25, 0xFF	; 255
 646:	80 ec       	ldi	r24, 0xC0	; 192
 648:	08 95       	ret

0000064a <__fp_pscA>:
 64a:	00 24       	eor	r0, r0
 64c:	0a 94       	dec	r0
 64e:	16 16       	cp	r1, r22
 650:	17 06       	cpc	r1, r23
 652:	18 06       	cpc	r1, r24
 654:	09 06       	cpc	r0, r25
 656:	08 95       	ret

00000658 <__fp_pscB>:
 658:	00 24       	eor	r0, r0
 65a:	0a 94       	dec	r0
 65c:	12 16       	cp	r1, r18
 65e:	13 06       	cpc	r1, r19
 660:	14 06       	cpc	r1, r20
 662:	05 06       	cpc	r0, r21
 664:	08 95       	ret

00000666 <__fp_round>:
 666:	09 2e       	mov	r0, r25
 668:	03 94       	inc	r0
 66a:	00 0c       	add	r0, r0
 66c:	11 f4       	brne	.+4      	; 0x672 <__fp_round+0xc>
 66e:	88 23       	and	r24, r24
 670:	52 f0       	brmi	.+20     	; 0x686 <__fp_round+0x20>
 672:	bb 0f       	add	r27, r27
 674:	40 f4       	brcc	.+16     	; 0x686 <__fp_round+0x20>
 676:	bf 2b       	or	r27, r31
 678:	11 f4       	brne	.+4      	; 0x67e <__fp_round+0x18>
 67a:	60 ff       	sbrs	r22, 0
 67c:	04 c0       	rjmp	.+8      	; 0x686 <__fp_round+0x20>
 67e:	6f 5f       	subi	r22, 0xFF	; 255
 680:	7f 4f       	sbci	r23, 0xFF	; 255
 682:	8f 4f       	sbci	r24, 0xFF	; 255
 684:	9f 4f       	sbci	r25, 0xFF	; 255
 686:	08 95       	ret

00000688 <__fp_split3>:
 688:	57 fd       	sbrc	r21, 7
 68a:	90 58       	subi	r25, 0x80	; 128
 68c:	44 0f       	add	r20, r20
 68e:	55 1f       	adc	r21, r21
 690:	59 f0       	breq	.+22     	; 0x6a8 <__fp_splitA+0x10>
 692:	5f 3f       	cpi	r21, 0xFF	; 255
 694:	71 f0       	breq	.+28     	; 0x6b2 <__fp_splitA+0x1a>
 696:	47 95       	ror	r20

00000698 <__fp_splitA>:
 698:	88 0f       	add	r24, r24
 69a:	97 fb       	bst	r25, 7
 69c:	99 1f       	adc	r25, r25
 69e:	61 f0       	breq	.+24     	; 0x6b8 <__fp_splitA+0x20>
 6a0:	9f 3f       	cpi	r25, 0xFF	; 255
 6a2:	79 f0       	breq	.+30     	; 0x6c2 <__fp_splitA+0x2a>
 6a4:	87 95       	ror	r24
 6a6:	08 95       	ret
 6a8:	12 16       	cp	r1, r18
 6aa:	13 06       	cpc	r1, r19
 6ac:	14 06       	cpc	r1, r20
 6ae:	55 1f       	adc	r21, r21
 6b0:	f2 cf       	rjmp	.-28     	; 0x696 <__fp_split3+0xe>
 6b2:	46 95       	lsr	r20
 6b4:	f1 df       	rcall	.-30     	; 0x698 <__fp_splitA>
 6b6:	08 c0       	rjmp	.+16     	; 0x6c8 <__fp_splitA+0x30>
 6b8:	16 16       	cp	r1, r22
 6ba:	17 06       	cpc	r1, r23
 6bc:	18 06       	cpc	r1, r24
 6be:	99 1f       	adc	r25, r25
 6c0:	f1 cf       	rjmp	.-30     	; 0x6a4 <__fp_splitA+0xc>
 6c2:	86 95       	lsr	r24
 6c4:	71 05       	cpc	r23, r1
 6c6:	61 05       	cpc	r22, r1
 6c8:	08 94       	sec
 6ca:	08 95       	ret

000006cc <__fp_zero>:
 6cc:	e8 94       	clt

000006ce <__fp_szero>:
 6ce:	bb 27       	eor	r27, r27
 6d0:	66 27       	eor	r22, r22
 6d2:	77 27       	eor	r23, r23
 6d4:	cb 01       	movw	r24, r22
 6d6:	97 f9       	bld	r25, 7
 6d8:	08 95       	ret

000006da <__gesf2>:
 6da:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <__fp_cmp>
 6de:	08 f4       	brcc	.+2      	; 0x6e2 <__gesf2+0x8>
 6e0:	8f ef       	ldi	r24, 0xFF	; 255
 6e2:	08 95       	ret

000006e4 <_exit>:
 6e4:	f8 94       	cli

000006e6 <__stop_program>:
 6e6:	ff cf       	rjmp	.-2      	; 0x6e6 <__stop_program>
