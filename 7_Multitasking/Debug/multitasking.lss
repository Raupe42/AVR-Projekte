
multitasking.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003f4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000468  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000468  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000498  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000004d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000075b  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000066e  00000000  00000000  00000c53  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000199  00000000  00000000  000012c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  0000145c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000391  00000000  00000000  00001490  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000047  00000000  00000000  00001821  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00001868  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
#define GELB	3

uint32_t t=0;

int main(void)
{
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
  94:	cd b7       	in	r28, 0x3d	; 61
  96:	de b7       	in	r29, 0x3e	; 62
  98:	2e 97       	sbiw	r28, 0x0e	; 14
  9a:	0f b6       	in	r0, 0x3f	; 63
  9c:	f8 94       	cli
  9e:	de bf       	out	0x3e, r29	; 62
  a0:	0f be       	out	0x3f, r0	; 63
  a2:	cd bf       	out	0x3d, r28	; 61
	DDRB = (1<<ROT) | (1<<GELB);
  a4:	84 e2       	ldi	r24, 0x24	; 36
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	2c e0       	ldi	r18, 0x0C	; 12
  aa:	fc 01       	movw	r30, r24
  ac:	20 83       	st	Z, r18
  ae:	80 e0       	ldi	r24, 0x00	; 0
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	a0 e8       	ldi	r26, 0x80	; 128
  b4:	bf e3       	ldi	r27, 0x3F	; 63
  b6:	89 83       	std	Y+1, r24	; 0x01
  b8:	9a 83       	std	Y+2, r25	; 0x02
  ba:	ab 83       	std	Y+3, r26	; 0x03
  bc:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	4a e7       	ldi	r20, 0x7A	; 122
  c4:	55 e4       	ldi	r21, 0x45	; 69
  c6:	69 81       	ldd	r22, Y+1	; 0x01
  c8:	7a 81       	ldd	r23, Y+2	; 0x02
  ca:	8b 81       	ldd	r24, Y+3	; 0x03
  cc:	9c 81       	ldd	r25, Y+4	; 0x04
  ce:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__mulsf3>
  d2:	dc 01       	movw	r26, r24
  d4:	cb 01       	movw	r24, r22
  d6:	8d 83       	std	Y+5, r24	; 0x05
  d8:	9e 83       	std	Y+6, r25	; 0x06
  da:	af 83       	std	Y+7, r26	; 0x07
  dc:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
  de:	20 e0       	ldi	r18, 0x00	; 0
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	40 e8       	ldi	r20, 0x80	; 128
  e4:	5f e3       	ldi	r21, 0x3F	; 63
  e6:	6d 81       	ldd	r22, Y+5	; 0x05
  e8:	7e 81       	ldd	r23, Y+6	; 0x06
  ea:	8f 81       	ldd	r24, Y+7	; 0x07
  ec:	98 85       	ldd	r25, Y+8	; 0x08
  ee:	0e 94 dd 00 	call	0x1ba	; 0x1ba <__cmpsf2>
  f2:	88 23       	and	r24, r24
  f4:	2c f4       	brge	.+10     	; 0x100 <main+0x70>
		__ticks = 1;
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	9a 87       	std	Y+10, r25	; 0x0a
  fc:	89 87       	std	Y+9, r24	; 0x09
  fe:	3f c0       	rjmp	.+126    	; 0x17e <main+0xee>
	else if (__tmp > 65535)
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	3f ef       	ldi	r19, 0xFF	; 255
 104:	4f e7       	ldi	r20, 0x7F	; 127
 106:	57 e4       	ldi	r21, 0x47	; 71
 108:	6d 81       	ldd	r22, Y+5	; 0x05
 10a:	7e 81       	ldd	r23, Y+6	; 0x06
 10c:	8f 81       	ldd	r24, Y+7	; 0x07
 10e:	98 85       	ldd	r25, Y+8	; 0x08
 110:	0e 94 5e 01 	call	0x2bc	; 0x2bc <__gesf2>
 114:	18 16       	cp	r1, r24
 116:	4c f5       	brge	.+82     	; 0x16a <main+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	40 e2       	ldi	r20, 0x20	; 32
 11e:	51 e4       	ldi	r21, 0x41	; 65
 120:	69 81       	ldd	r22, Y+1	; 0x01
 122:	7a 81       	ldd	r23, Y+2	; 0x02
 124:	8b 81       	ldd	r24, Y+3	; 0x03
 126:	9c 81       	ldd	r25, Y+4	; 0x04
 128:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__mulsf3>
 12c:	dc 01       	movw	r26, r24
 12e:	cb 01       	movw	r24, r22
 130:	bc 01       	movw	r22, r24
 132:	cd 01       	movw	r24, r26
 134:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <__fixunssfsi>
 138:	dc 01       	movw	r26, r24
 13a:	cb 01       	movw	r24, r22
 13c:	9a 87       	std	Y+10, r25	; 0x0a
 13e:	89 87       	std	Y+9, r24	; 0x09
 140:	0f c0       	rjmp	.+30     	; 0x160 <main+0xd0>
 142:	80 e9       	ldi	r24, 0x90	; 144
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	9c 87       	std	Y+12, r25	; 0x0c
 148:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 14a:	8b 85       	ldd	r24, Y+11	; 0x0b
 14c:	9c 85       	ldd	r25, Y+12	; 0x0c
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <main+0xbe>
 152:	9c 87       	std	Y+12, r25	; 0x0c
 154:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 156:	89 85       	ldd	r24, Y+9	; 0x09
 158:	9a 85       	ldd	r25, Y+10	; 0x0a
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	9a 87       	std	Y+10, r25	; 0x0a
 15e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 160:	89 85       	ldd	r24, Y+9	; 0x09
 162:	9a 85       	ldd	r25, Y+10	; 0x0a
 164:	89 2b       	or	r24, r25
 166:	69 f7       	brne	.-38     	; 0x142 <main+0xb2>
 168:	14 c0       	rjmp	.+40     	; 0x192 <main+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 16a:	6d 81       	ldd	r22, Y+5	; 0x05
 16c:	7e 81       	ldd	r23, Y+6	; 0x06
 16e:	8f 81       	ldd	r24, Y+7	; 0x07
 170:	98 85       	ldd	r25, Y+8	; 0x08
 172:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <__fixunssfsi>
 176:	dc 01       	movw	r26, r24
 178:	cb 01       	movw	r24, r22
 17a:	9a 87       	std	Y+10, r25	; 0x0a
 17c:	89 87       	std	Y+9, r24	; 0x09
 17e:	89 85       	ldd	r24, Y+9	; 0x09
 180:	9a 85       	ldd	r25, Y+10	; 0x0a
 182:	9e 87       	std	Y+14, r25	; 0x0e
 184:	8d 87       	std	Y+13, r24	; 0x0d
 186:	8d 85       	ldd	r24, Y+13	; 0x0d
 188:	9e 85       	ldd	r25, Y+14	; 0x0e
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <main+0xfa>
 18e:	9e 87       	std	Y+14, r25	; 0x0e
 190:	8d 87       	std	Y+13, r24	; 0x0d

    while (1) 
    {
		_delay_ms(1);
		t++;
 192:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 196:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 19a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
 19e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
 1a2:	01 96       	adiw	r24, 0x01	; 1
 1a4:	a1 1d       	adc	r26, r1
 1a6:	b1 1d       	adc	r27, r1
 1a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 1ac:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 1b0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <_edata+0x2>
 1b4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <_edata+0x3>
		

		// 2. Blinker:  6 Hz
		
		
    }
 1b8:	7a cf       	rjmp	.-268    	; 0xae <main+0x1e>

000001ba <__cmpsf2>:
 1ba:	0e 94 11 01 	call	0x222	; 0x222 <__fp_cmp>
 1be:	08 f4       	brcc	.+2      	; 0x1c2 <__cmpsf2+0x8>
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	08 95       	ret

000001c4 <__fixunssfsi>:
 1c4:	0e 94 3d 01 	call	0x27a	; 0x27a <__fp_splitA>
 1c8:	88 f0       	brcs	.+34     	; 0x1ec <__fixunssfsi+0x28>
 1ca:	9f 57       	subi	r25, 0x7F	; 127
 1cc:	98 f0       	brcs	.+38     	; 0x1f4 <__fixunssfsi+0x30>
 1ce:	b9 2f       	mov	r27, r25
 1d0:	99 27       	eor	r25, r25
 1d2:	b7 51       	subi	r27, 0x17	; 23
 1d4:	b0 f0       	brcs	.+44     	; 0x202 <__fixunssfsi+0x3e>
 1d6:	e1 f0       	breq	.+56     	; 0x210 <__fixunssfsi+0x4c>
 1d8:	66 0f       	add	r22, r22
 1da:	77 1f       	adc	r23, r23
 1dc:	88 1f       	adc	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	1a f0       	brmi	.+6      	; 0x1e8 <__fixunssfsi+0x24>
 1e2:	ba 95       	dec	r27
 1e4:	c9 f7       	brne	.-14     	; 0x1d8 <__fixunssfsi+0x14>
 1e6:	14 c0       	rjmp	.+40     	; 0x210 <__fixunssfsi+0x4c>
 1e8:	b1 30       	cpi	r27, 0x01	; 1
 1ea:	91 f0       	breq	.+36     	; 0x210 <__fixunssfsi+0x4c>
 1ec:	0e 94 57 01 	call	0x2ae	; 0x2ae <__fp_zero>
 1f0:	b1 e0       	ldi	r27, 0x01	; 1
 1f2:	08 95       	ret
 1f4:	0c 94 57 01 	jmp	0x2ae	; 0x2ae <__fp_zero>
 1f8:	67 2f       	mov	r22, r23
 1fa:	78 2f       	mov	r23, r24
 1fc:	88 27       	eor	r24, r24
 1fe:	b8 5f       	subi	r27, 0xF8	; 248
 200:	39 f0       	breq	.+14     	; 0x210 <__fixunssfsi+0x4c>
 202:	b9 3f       	cpi	r27, 0xF9	; 249
 204:	cc f3       	brlt	.-14     	; 0x1f8 <__fixunssfsi+0x34>
 206:	86 95       	lsr	r24
 208:	77 95       	ror	r23
 20a:	67 95       	ror	r22
 20c:	b3 95       	inc	r27
 20e:	d9 f7       	brne	.-10     	; 0x206 <__fixunssfsi+0x42>
 210:	3e f4       	brtc	.+14     	; 0x220 <__fixunssfsi+0x5c>
 212:	90 95       	com	r25
 214:	80 95       	com	r24
 216:	70 95       	com	r23
 218:	61 95       	neg	r22
 21a:	7f 4f       	sbci	r23, 0xFF	; 255
 21c:	8f 4f       	sbci	r24, 0xFF	; 255
 21e:	9f 4f       	sbci	r25, 0xFF	; 255
 220:	08 95       	ret

00000222 <__fp_cmp>:
 222:	99 0f       	add	r25, r25
 224:	00 08       	sbc	r0, r0
 226:	55 0f       	add	r21, r21
 228:	aa 0b       	sbc	r26, r26
 22a:	e0 e8       	ldi	r30, 0x80	; 128
 22c:	fe ef       	ldi	r31, 0xFE	; 254
 22e:	16 16       	cp	r1, r22
 230:	17 06       	cpc	r1, r23
 232:	e8 07       	cpc	r30, r24
 234:	f9 07       	cpc	r31, r25
 236:	c0 f0       	brcs	.+48     	; 0x268 <__fp_cmp+0x46>
 238:	12 16       	cp	r1, r18
 23a:	13 06       	cpc	r1, r19
 23c:	e4 07       	cpc	r30, r20
 23e:	f5 07       	cpc	r31, r21
 240:	98 f0       	brcs	.+38     	; 0x268 <__fp_cmp+0x46>
 242:	62 1b       	sub	r22, r18
 244:	73 0b       	sbc	r23, r19
 246:	84 0b       	sbc	r24, r20
 248:	95 0b       	sbc	r25, r21
 24a:	39 f4       	brne	.+14     	; 0x25a <__fp_cmp+0x38>
 24c:	0a 26       	eor	r0, r26
 24e:	61 f0       	breq	.+24     	; 0x268 <__fp_cmp+0x46>
 250:	23 2b       	or	r18, r19
 252:	24 2b       	or	r18, r20
 254:	25 2b       	or	r18, r21
 256:	21 f4       	brne	.+8      	; 0x260 <__fp_cmp+0x3e>
 258:	08 95       	ret
 25a:	0a 26       	eor	r0, r26
 25c:	09 f4       	brne	.+2      	; 0x260 <__fp_cmp+0x3e>
 25e:	a1 40       	sbci	r26, 0x01	; 1
 260:	a6 95       	lsr	r26
 262:	8f ef       	ldi	r24, 0xFF	; 255
 264:	81 1d       	adc	r24, r1
 266:	81 1d       	adc	r24, r1
 268:	08 95       	ret

0000026a <__fp_split3>:
 26a:	57 fd       	sbrc	r21, 7
 26c:	90 58       	subi	r25, 0x80	; 128
 26e:	44 0f       	add	r20, r20
 270:	55 1f       	adc	r21, r21
 272:	59 f0       	breq	.+22     	; 0x28a <__fp_splitA+0x10>
 274:	5f 3f       	cpi	r21, 0xFF	; 255
 276:	71 f0       	breq	.+28     	; 0x294 <__fp_splitA+0x1a>
 278:	47 95       	ror	r20

0000027a <__fp_splitA>:
 27a:	88 0f       	add	r24, r24
 27c:	97 fb       	bst	r25, 7
 27e:	99 1f       	adc	r25, r25
 280:	61 f0       	breq	.+24     	; 0x29a <__fp_splitA+0x20>
 282:	9f 3f       	cpi	r25, 0xFF	; 255
 284:	79 f0       	breq	.+30     	; 0x2a4 <__fp_splitA+0x2a>
 286:	87 95       	ror	r24
 288:	08 95       	ret
 28a:	12 16       	cp	r1, r18
 28c:	13 06       	cpc	r1, r19
 28e:	14 06       	cpc	r1, r20
 290:	55 1f       	adc	r21, r21
 292:	f2 cf       	rjmp	.-28     	; 0x278 <__fp_split3+0xe>
 294:	46 95       	lsr	r20
 296:	f1 df       	rcall	.-30     	; 0x27a <__fp_splitA>
 298:	08 c0       	rjmp	.+16     	; 0x2aa <__fp_splitA+0x30>
 29a:	16 16       	cp	r1, r22
 29c:	17 06       	cpc	r1, r23
 29e:	18 06       	cpc	r1, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	f1 cf       	rjmp	.-30     	; 0x286 <__fp_splitA+0xc>
 2a4:	86 95       	lsr	r24
 2a6:	71 05       	cpc	r23, r1
 2a8:	61 05       	cpc	r22, r1
 2aa:	08 94       	sec
 2ac:	08 95       	ret

000002ae <__fp_zero>:
 2ae:	e8 94       	clt

000002b0 <__fp_szero>:
 2b0:	bb 27       	eor	r27, r27
 2b2:	66 27       	eor	r22, r22
 2b4:	77 27       	eor	r23, r23
 2b6:	cb 01       	movw	r24, r22
 2b8:	97 f9       	bld	r25, 7
 2ba:	08 95       	ret

000002bc <__gesf2>:
 2bc:	0e 94 11 01 	call	0x222	; 0x222 <__fp_cmp>
 2c0:	08 f4       	brcc	.+2      	; 0x2c4 <__gesf2+0x8>
 2c2:	8f ef       	ldi	r24, 0xFF	; 255
 2c4:	08 95       	ret

000002c6 <__mulsf3>:
 2c6:	0e 94 76 01 	call	0x2ec	; 0x2ec <__mulsf3x>
 2ca:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__fp_round>
 2ce:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <__fp_pscA>
 2d2:	38 f0       	brcs	.+14     	; 0x2e2 <__mulsf3+0x1c>
 2d4:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__fp_pscB>
 2d8:	20 f0       	brcs	.+8      	; 0x2e2 <__mulsf3+0x1c>
 2da:	95 23       	and	r25, r21
 2dc:	11 f0       	breq	.+4      	; 0x2e2 <__mulsf3+0x1c>
 2de:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_inf>
 2e2:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_nan>
 2e6:	11 24       	eor	r1, r1
 2e8:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__fp_szero>

000002ec <__mulsf3x>:
 2ec:	0e 94 35 01 	call	0x26a	; 0x26a <__fp_split3>
 2f0:	70 f3       	brcs	.-36     	; 0x2ce <__mulsf3+0x8>

000002f2 <__mulsf3_pse>:
 2f2:	95 9f       	mul	r25, r21
 2f4:	c1 f3       	breq	.-16     	; 0x2e6 <__mulsf3+0x20>
 2f6:	95 0f       	add	r25, r21
 2f8:	50 e0       	ldi	r21, 0x00	; 0
 2fa:	55 1f       	adc	r21, r21
 2fc:	62 9f       	mul	r22, r18
 2fe:	f0 01       	movw	r30, r0
 300:	72 9f       	mul	r23, r18
 302:	bb 27       	eor	r27, r27
 304:	f0 0d       	add	r31, r0
 306:	b1 1d       	adc	r27, r1
 308:	63 9f       	mul	r22, r19
 30a:	aa 27       	eor	r26, r26
 30c:	f0 0d       	add	r31, r0
 30e:	b1 1d       	adc	r27, r1
 310:	aa 1f       	adc	r26, r26
 312:	64 9f       	mul	r22, r20
 314:	66 27       	eor	r22, r22
 316:	b0 0d       	add	r27, r0
 318:	a1 1d       	adc	r26, r1
 31a:	66 1f       	adc	r22, r22
 31c:	82 9f       	mul	r24, r18
 31e:	22 27       	eor	r18, r18
 320:	b0 0d       	add	r27, r0
 322:	a1 1d       	adc	r26, r1
 324:	62 1f       	adc	r22, r18
 326:	73 9f       	mul	r23, r19
 328:	b0 0d       	add	r27, r0
 32a:	a1 1d       	adc	r26, r1
 32c:	62 1f       	adc	r22, r18
 32e:	83 9f       	mul	r24, r19
 330:	a0 0d       	add	r26, r0
 332:	61 1d       	adc	r22, r1
 334:	22 1f       	adc	r18, r18
 336:	74 9f       	mul	r23, r20
 338:	33 27       	eor	r19, r19
 33a:	a0 0d       	add	r26, r0
 33c:	61 1d       	adc	r22, r1
 33e:	23 1f       	adc	r18, r19
 340:	84 9f       	mul	r24, r20
 342:	60 0d       	add	r22, r0
 344:	21 1d       	adc	r18, r1
 346:	82 2f       	mov	r24, r18
 348:	76 2f       	mov	r23, r22
 34a:	6a 2f       	mov	r22, r26
 34c:	11 24       	eor	r1, r1
 34e:	9f 57       	subi	r25, 0x7F	; 127
 350:	50 40       	sbci	r21, 0x00	; 0
 352:	9a f0       	brmi	.+38     	; 0x37a <__mulsf3_pse+0x88>
 354:	f1 f0       	breq	.+60     	; 0x392 <__mulsf3_pse+0xa0>
 356:	88 23       	and	r24, r24
 358:	4a f0       	brmi	.+18     	; 0x36c <__mulsf3_pse+0x7a>
 35a:	ee 0f       	add	r30, r30
 35c:	ff 1f       	adc	r31, r31
 35e:	bb 1f       	adc	r27, r27
 360:	66 1f       	adc	r22, r22
 362:	77 1f       	adc	r23, r23
 364:	88 1f       	adc	r24, r24
 366:	91 50       	subi	r25, 0x01	; 1
 368:	50 40       	sbci	r21, 0x00	; 0
 36a:	a9 f7       	brne	.-22     	; 0x356 <__mulsf3_pse+0x64>
 36c:	9e 3f       	cpi	r25, 0xFE	; 254
 36e:	51 05       	cpc	r21, r1
 370:	80 f0       	brcs	.+32     	; 0x392 <__mulsf3_pse+0xa0>
 372:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__fp_inf>
 376:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__fp_szero>
 37a:	5f 3f       	cpi	r21, 0xFF	; 255
 37c:	e4 f3       	brlt	.-8      	; 0x376 <__mulsf3_pse+0x84>
 37e:	98 3e       	cpi	r25, 0xE8	; 232
 380:	d4 f3       	brlt	.-12     	; 0x376 <__mulsf3_pse+0x84>
 382:	86 95       	lsr	r24
 384:	77 95       	ror	r23
 386:	67 95       	ror	r22
 388:	b7 95       	ror	r27
 38a:	f7 95       	ror	r31
 38c:	e7 95       	ror	r30
 38e:	9f 5f       	subi	r25, 0xFF	; 255
 390:	c1 f7       	brne	.-16     	; 0x382 <__mulsf3_pse+0x90>
 392:	fe 2b       	or	r31, r30
 394:	88 0f       	add	r24, r24
 396:	91 1d       	adc	r25, r1
 398:	96 95       	lsr	r25
 39a:	87 95       	ror	r24
 39c:	97 f9       	bld	r25, 7
 39e:	08 95       	ret

000003a0 <__fp_inf>:
 3a0:	97 f9       	bld	r25, 7
 3a2:	9f 67       	ori	r25, 0x7F	; 127
 3a4:	80 e8       	ldi	r24, 0x80	; 128
 3a6:	70 e0       	ldi	r23, 0x00	; 0
 3a8:	60 e0       	ldi	r22, 0x00	; 0
 3aa:	08 95       	ret

000003ac <__fp_nan>:
 3ac:	9f ef       	ldi	r25, 0xFF	; 255
 3ae:	80 ec       	ldi	r24, 0xC0	; 192
 3b0:	08 95       	ret

000003b2 <__fp_pscA>:
 3b2:	00 24       	eor	r0, r0
 3b4:	0a 94       	dec	r0
 3b6:	16 16       	cp	r1, r22
 3b8:	17 06       	cpc	r1, r23
 3ba:	18 06       	cpc	r1, r24
 3bc:	09 06       	cpc	r0, r25
 3be:	08 95       	ret

000003c0 <__fp_pscB>:
 3c0:	00 24       	eor	r0, r0
 3c2:	0a 94       	dec	r0
 3c4:	12 16       	cp	r1, r18
 3c6:	13 06       	cpc	r1, r19
 3c8:	14 06       	cpc	r1, r20
 3ca:	05 06       	cpc	r0, r21
 3cc:	08 95       	ret

000003ce <__fp_round>:
 3ce:	09 2e       	mov	r0, r25
 3d0:	03 94       	inc	r0
 3d2:	00 0c       	add	r0, r0
 3d4:	11 f4       	brne	.+4      	; 0x3da <__fp_round+0xc>
 3d6:	88 23       	and	r24, r24
 3d8:	52 f0       	brmi	.+20     	; 0x3ee <__fp_round+0x20>
 3da:	bb 0f       	add	r27, r27
 3dc:	40 f4       	brcc	.+16     	; 0x3ee <__fp_round+0x20>
 3de:	bf 2b       	or	r27, r31
 3e0:	11 f4       	brne	.+4      	; 0x3e6 <__fp_round+0x18>
 3e2:	60 ff       	sbrs	r22, 0
 3e4:	04 c0       	rjmp	.+8      	; 0x3ee <__fp_round+0x20>
 3e6:	6f 5f       	subi	r22, 0xFF	; 255
 3e8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ea:	8f 4f       	sbci	r24, 0xFF	; 255
 3ec:	9f 4f       	sbci	r25, 0xFF	; 255
 3ee:	08 95       	ret

000003f0 <_exit>:
 3f0:	f8 94       	cli

000003f2 <__stop_program>:
 3f2:	ff cf       	rjmp	.-2      	; 0x3f2 <__stop_program>
